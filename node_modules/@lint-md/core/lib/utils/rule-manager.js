"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createRuleManager = void 0;
const lodash_1 = require("lodash");
const fixer_1 = require("./fixer");
const createRuleManager = (appliedMarkdown) => {
    const fixer = (0, fixer_1.createFixer)();
    const allReportedData = [];
    const getReportData = () => {
        return allReportedData;
    };
    const getAllFixes = () => {
        return allReportedData
            .filter((item) => {
            return (0, lodash_1.isFunction)(item.fix);
        })
            .map((item) => {
            const fix = item.fix(fixer);
            return {
                ...fix,
                targetRule: item.name
            };
        });
    };
    const createRuleContext = (ruleConfig, data) => {
        const { rule, options } = ruleConfig;
        const report = (option) => {
            const location = option.loc;
            const markStart = Math.max(0, location.start.offset - 5);
            const markEnd = Math.min(appliedMarkdown.length, location.end.offset + 5);
            allReportedData.push({
                ...option,
                content: appliedMarkdown.slice(markStart, markEnd),
                name: rule.meta.name
            });
        };
        return {
            report,
            options: options || {},
            ...data
        };
    };
    return {
        getReportData,
        getAllFixes,
        createRuleContext
    };
};
exports.createRuleManager = createRuleManager;
//# sourceMappingURL=rule-manager.js.map