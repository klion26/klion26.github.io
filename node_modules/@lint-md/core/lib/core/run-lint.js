"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.runLint = void 0;
const parser_1 = require("@lint-md/parser");
const emitter_1 = require("../utils/emitter");
const traverser_1 = require("../utils/traverser");
const rule_manager_1 = require("../utils/rule-manager");
const runLint = (markdown, allRuleConfigs) => {
    const ast = (0, parser_1.parseMd)(markdown);
    const nodeQueue = [];
    const ruleManager = (0, rule_manager_1.createRuleManager)(markdown);
    const traverser = (0, traverser_1.createTraverser)({
        onEnter: (node) => {
            nodeQueue.push({
                isEntering: true,
                node
            });
            nodeQueue.push({
                isEntering: false,
                node
            });
        }
    });
    const emitter = (0, emitter_1.createEmitter)();
    for (const { rule, options } of allRuleConfigs) {
        const ruleContext = ruleManager.createRuleContext({ rule, options }, {
            ast,
            markdown
        });
        const ruleSelectors = rule.create(ruleContext);
        for (const selector of Object.keys(ruleSelectors)) {
            emitter.on(selector, ruleSelectors[selector]);
        }
    }
    traverser.traverse(ast, null);
    for (const nodeQueueItem of nodeQueue) {
        const { node, isEntering } = nodeQueueItem;
        try {
            if (isEntering && node.type) {
                emitter.emit(node.type, node);
            }
        }
        catch (e) {
            console.log(e);
        }
    }
    return {
        ruleManager
    };
};
exports.runLint = runLint;
//# sourceMappingURL=run-lint.js.map