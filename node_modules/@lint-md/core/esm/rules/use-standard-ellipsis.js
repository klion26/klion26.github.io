const findAllSingleEllipsis = (s) => {
    const r = [];
    const re = /…+/g;
    while (true) {
        const matched = re.exec(s);
        if (matched && matched[0].length !== 2) {
            r.push({
                index: matched.index,
                length: matched[0].length
            });
        }
        else {
            break;
        }
    }
    return r;
};
const findAllDotEllipsis = (s) => {
    const r = [];
    const re = /\.{4,}/g;
    while (true) {
        const matched = re.exec(s);
        if (matched) {
            r.push({
                index: matched.index,
                length: matched[0].length
            });
        }
        else {
            break;
        }
    }
    return r;
};
const useStandardEllipsis = {
    meta: {
        name: 'use-standard-ellipsis'
    },
    create: (context) => {
        return {
            text: (node) => {
                const text = node.value;
                const { line, column } = node.position.start;
                const toFixList = findAllDotEllipsis(text).concat(findAllSingleEllipsis(text));
                toFixList.forEach((item) => {
                    context.report({
                        loc: {
                            start: {
                                line,
                                column: column + item.index
                            },
                            end: {
                                line,
                                column: column + item.index + item.length
                            }
                        },
                        message: '请使用标准规范的省略号',
                        fix: (fixer) => {
                            const startIndex = node.position.start.offset + item.index;
                            return fixer.replaceTextRange([startIndex, startIndex + item.length], '……');
                        }
                    });
                });
            }
        };
    }
};
export default useStandardEllipsis;
//# sourceMappingURL=use-standard-ellipsis.js.map