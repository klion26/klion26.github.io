export const applyFix = (content, fixes) => {
    fixes.sort((a, b) => {
        return a.range[0] - b.range[0] || a.range[1] - b.range[1];
    });
    let result = '';
    let currentIndex = Number.NEGATIVE_INFINITY;
    const notAppliedFixes = [];
    const tryApplyOneFix = (fix) => {
        const [start, end] = fix.range;
        if (start > end) {
            return;
        }
        if (currentIndex >= start) {
            notAppliedFixes.push(fix);
            return;
        }
        result += content.slice(currentIndex, Math.max(0, start));
        result += fix.text;
        currentIndex = end;
    };
    for (const fix of fixes) {
        tryApplyOneFix(fix);
    }
    result += content.slice(Math.max(0, currentIndex));
    return {
        result,
        notAppliedFixes
    };
};
//# sourceMappingURL=apply-fix.js.map