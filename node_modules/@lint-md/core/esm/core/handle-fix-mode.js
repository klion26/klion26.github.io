import { MAX_LINT_AND_FIX_CALL_TIMES } from '../common/constant';
import { applyFix } from '../utils/apply-fix';
import { runLint } from './run-lint';
export const handleFixMode = (markdown, rules) => {
    let lintTimes = 0;
    let initialLintResult = {};
    let fixedResult = {
        result: markdown,
        notAppliedFixes: []
    };
    while (lintTimes <= MAX_LINT_AND_FIX_CALL_TIMES) {
        const lintResult = runLint(fixedResult.result, rules);
        lintTimes += 1;
        if (lintTimes === 1) {
            initialLintResult = lintResult;
        }
        fixedResult = applyFix(fixedResult.result, lintResult.ruleManager.getAllFixes());
        if (!fixedResult.notAppliedFixes.length) {
            break;
        }
    }
    return {
        lintResult: initialLintResult,
        fixedResult
    };
};
//# sourceMappingURL=handle-fix-mode.js.map