"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.revertMdAstNode = exports.parseMd = void 0;
const remark_frontmatter_1 = require("remark-frontmatter");
const remark_gfm_1 = require("remark-gfm");
const remark_directive_1 = require("remark-directive");
const remark_math_1 = require("remark-math");
const remark_1 = require("remark");
const mdast_util_gfm_autolink_literal_1 = require("mdast-util-gfm-autolink-literal");
// https://github.com/remarkjs/remark-gfm/issues/16，解决某些 text 节点没有 position 的问题
mdast_util_gfm_autolink_literal_1.gfmAutolinkLiteralFromMarkdown.transforms = [];
const depsLink = (0, remark_1.remark)()
    .use(remark_frontmatter_1.default)
    .use(remark_gfm_1.default)
    .use(remark_directive_1.default)
    .use(remark_math_1.default);
/**
 * 将 Markdown 解析成 ast
 *
 * @param {string} md Markdown 文本
 * @returns {MarkdownNode} md ast 结构
 * @author YuZhanglong <loveyzl1123@gmail.com>
 */
const parseMd = (md) => {
    return depsLink.parse(md);
};
exports.parseMd = parseMd;
/**
 * 将 ast 解析成 markdown
 *
 * @param {MarkdownNode} node ast 结构
 * @returns {string} md Markdown 文本
 * @author YuZhanglong <loveyzl1123@gmail.com>
 */
const revertMdAstNode = (node) => {
    return depsLink.stringify(node);
};
exports.revertMdAstNode = revertMdAstNode;
//# sourceMappingURL=parse-md.js.map