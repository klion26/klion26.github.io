import type { Parent } from 'unist';

export declare type MarkdownCodeNode = MarkdownNode & {
    value: string;
    lang: string;
};

export declare type MarkdownLinkNode = MarkdownNode & {
    url: string;
};

export declare type MarkdownListItemNode = MarkdownNode & {
    children: MarkdownNode[];
};

export declare type MarkdownNode = Parent & any;

/** Markdown 节点位置 */
export declare interface MarkdownNodePosition {
    /**
     * 所在行（索引从 1 开始）
     */
    line: number;
    /**
     * 所在列（索引从 1 开始）
     */
    column: number;
}

export declare type MarkdownTextNode = MarkdownNode & {
    value: string;
};

/**
 * 将 Markdown 解析成 ast
 *
 * @param {string} md Markdown 文本
 * @returns {MarkdownNode} md ast 结构
 * @author YuZhanglong <loveyzl1123@gmail.com>
 */
export declare const parseMd: (md: string) => MarkdownNode;

/**
 * 将 ast 解析成 markdown
 *
 * @param {MarkdownNode} node ast 结构
 * @returns {string} md Markdown 文本
 * @author YuZhanglong <loveyzl1123@gmail.com>
 */
export declare const revertMdAstNode: (node: MarkdownNode) => string;

export { }
